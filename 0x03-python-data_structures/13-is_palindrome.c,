#include <stddef.h>

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

int is_palindrome(struct ListNode **head) {
   
    if (*head == NULL || (*head)->next == NULL) {
        return 1;
    }

  
    struct ListNode *slow = *head;
    struct ListNode *fast = *head;
    while (fast->next != NULL && fast->next->next != NULL) {
        slow = slow->next;
        fast = fast->next->next;
    }

 
    struct ListNode *prev = NULL;
    struct ListNode *curr = slow->next;
    struct ListNode *next;
    while (curr != NULL) {
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }

   
    struct ListNode *firstHalf = *head;
    struct ListNode *secondHalf = prev;
    while (secondHalf != NULL) {
        if (firstHalf->val != secondHalf->val) {
            return 0;  // Not a palindrome
        }
        firstHalf = firstHalf->next;
        secondHalf = secondHalf->next;
    }

    return 1;  
}
 
